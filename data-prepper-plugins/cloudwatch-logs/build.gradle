plugins {
    id 'java'
    id 'java-library'
}

repositories {
    mavenCentral()
}

dependencies {
    api project(':data-prepper-api')
    implementation project(':data-prepper-plugins:aws-plugin-api')
    implementation project(path: ':data-prepper-plugins:common')
    implementation 'io.micrometer:micrometer-core'
    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'
    implementation 'software.amazon.awssdk:cloudwatch'
    implementation 'software.amazon.awssdk:cloudwatchlogs'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    testImplementation project(path: ':data-prepper-test-common')
    testImplementation testLibs.mockito.inline
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

jacocoTestCoverageVerification {
    dependsOn jacocoTestReport
    violationRules {
        rule { //in addition to core projects rule
            limit {
                minimum = 0.90
            }
        }
    }
}

test {
    useJUnitPlatform()
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/java')
        }
        resources.srcDir file('src/integrationTest/resources')
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    group = 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs

    useJUnitPlatform()

    classpath = sourceSets.integrationTest.runtimeClasspath

    filter {
        includeTestsMatching '*IT'
    }
}